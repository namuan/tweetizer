sourceSets {
    functionalTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }
}

configurations {
    functionalTestImplementation.extendsFrom testImplementation
}

dependencies {
    functionalTestImplementation 'io.cucumber:cucumber-java:5.7.0'
    functionalTestImplementation 'io.cucumber:cucumber-spring:5.7.0'
    functionalTestImplementation 'io.cucumber:cucumber-junit:5.7.0'
    functionalTestImplementation 'de.monochromata.cucumber:reporting-plugin:4.0.48'
}

task functionalTest(type: Test) {
    dependsOn assemble
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    outputs.upToDateWhen { false }
    testLogging.showStandardStreams = true
    mustRunAfter(test)
}

check.dependsOn(functionalTest)

